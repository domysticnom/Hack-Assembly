// File: LeftLogicBitshift.hdl
// Author: Dominic Rivas
// Date: 02/11/2020
// Section: 508
// E-mail: dominicr1001@tamu.edu 
// Description: Allows shifting of bits from 1 to 8 bit shifts.
/**
 * Shift x left y bits, new bits are filled in with 0, you may not use any DFF or clocked chip in this implementation
 * You may assume the maximum shift is 8-bit
 */

CHIP LeftLogicBitshift {
    IN x[16], y[16];
    OUT out[16];

    PARTS:
	Mux16( a = x , b[0] = false , b[1..15] = x[0..14] , sel = y[0] , out = outa, out[0..13] = outab);
	Mux16( a = outa , b[0..1] = false , b[2..15] = outab , sel = y[1] , out = outb , out[0..11] = outbb);
	Mux16( a = outb , b[0..3] = false , b[4..15] = outbb , sel = y[2] , out = outc, out[0..7] = outcb);
	Mux16( a = outc , b[0..7] = false , b[8..15] = outcb , sel = y[3] , out = out);
	}